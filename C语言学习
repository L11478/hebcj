c语言的特点：
  1.具有结构语言特点:C语言具有(使用)结构化的流程控制语句实现选择结构、循环结构，允许采用缩进的书写形式编程
    （Ex. 1.拼图
          2.
              main()
              {   int pwd;
                      scanf("%d",&pwd);
                  if(pwd=123456)
                      printf("密码输入正确",&pwd);
                  else
                  printf("密码输入错误",&pwd);
                  return 0;
              }

  2.主要结构成分是函数：函数作为C程序的模块单位，便于实现程序的模块化，而且便于模块间相互调用及数据传递。
                      其中，C程序由一个主函数和多个子函数构成。就像，班主任与班里的学生的关系一样。
  3.运算符丰富：
      算数运算符：+、-、*、/、%（求余数）、++（加加）、--（减减）。复合运算符：+=、-=。；
      关系运算符：>、<、>=、<=；
      逻辑运算符：&&(与运算)、||（或运算）、!（非运算）；
  4.数据类型丰富：目的是实现复杂的数据结构运算。
      整    型：int 、 long                                 指针  类型：*
      实    型：float、double                               结构体类型：strut
      字 符 型：char                                        共用体类型：union
      数组类型：[]                                          枚 举类 型：enum
  5.比较接近硬件：允许直接访问物理地址。能进行位操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作。
      Ex.
      main()
      { 
          printf("\007");        →→→→→→→→→→→→→→→→→→     “硬件报警”      
      }
  6.语法限制少和程序设计自由度大：较好地处理了“限制”与“灵活”的矛盾。
  7.生成目标代码质量高、程序执行效率高：只比汇编程序生成的目标代码效率低10%-20%。
  8.可移植性好：将C语言文件拷贝到另一台电脑后不需要任何修改，且可以直接运行。
=========================================================================================================================
C语言的基本构成：
  1.预处理部分（文件包含属于预处理内容）
  2.变量说明部分；
  3.函数原型声明部分
  4.主函数部分
  5.自定义函数部分
Ps.
  (1).并非所有的C语言源程序都必须包含上述的5个部分。
  (2).每个C语言源程序都必须有且只有一个主函数。
  (3).每个C语言源程序可以有零个或多个自定义的非主函数，自定义非主函数的名称不能是main。
  (4).主函数可以定义在程序中的任何位置，程序总是从主函数开始置行，且总是在主函数中结束。
Ps.
  (1).每一条语句都必须以分号结尾。但预处理命令、函数头和花括号“}”之后不能加分号.
  (4).一行内可以书写一条或多条语句。
  (4).//(单行注释)或/*……*/表明注释部分，在编译时不进行编译。注释可以放在程序的任何位置。
=============================================================================================================================
C开发流程：
  1.编辑源程序
  2.编译源程序
  3.连接目标程序
  4.执行可执行程序
==========================================
\t：表示制表符 占8个位置
\n：表示换行
==========================================
数据类型的分类：
    1.基本类型：
                |    整形     int
               {    字符型   char
                |   实型（浮点型）：单精度实型  float
                                  {
                                   双精度实型 double
    2.构造类型：
               |    数组类型
               |     结构类型  struct
              {
               |    共用体类型 union
               |    枚举类型  enum
    3.指针类型*：其值用来表示某个变量在内存储器中的地址
    4：空类型 void:有一类函数调用后并不需要想调用者返回函数值，这类函数定义为空类型 void。
  =================================================================================
  标识符与关键字：
    关键字是具有固定名字和特殊含义的特殊标识符，也称保留字，不允许将它们另作别用。
  32个关键字：
    ①数据类型定义：typedfe
    ②数据类型：char,double,enum,float,int.long,short,struct,unio,unsigned,void,signed,volatile,auto,extern,register,static,const
    ③运算符：sizeof
    ④语句：break,case,continue,default,do,else,for,goto,if,return,switch,while
    
    字符形式              功能
      \n               换行
      \t               横向挑个（即跳到下一个输出区）
      \b               退格
      \r               回车
      \f               走纸换页
      \\               反斜杠字符“\”
      \＇              但撇号字符
      \"               双撇号字符
      \a               报警，相当于“\007”



符号常量的定义：
    符号常量：一般形式：#define 标识符 常量
    
    #include <stdio.h>
    #define PI 3.14159265
    int main()
    {
       float r,area;
       r=1.5;
       area=PI*r*r;
       printf("area=%f\n",area);
    }
    其中的“#define”被称作是宏定义。
  Ps.
      1.宏定义必须以#define开头，标识符和常量之间不加等于号，行末不加分号。
      2.宏定义#define应该放在函数外部，这样可以控制到程序结束。
      3.符号常量的标识符用大写字母，变量标识符用小写字母，以示区别（不分大小写对于编译结果也没有影响）。
===========================================================================================================
    %d表示输出输入格式为整型，用于int ,short int；%f表示输出实数，以小数形式输出，默认情况下保留小数点6位。

    C语言中，输入输出的格式为：输入输出符号("<格式化字符串>", <参量表>)，格式化字符串由格式控制、和输出表列两部分组成，其中格式控制包含格式声明和普通字符。

    格式声明由“%”和格式字符组成，如%d、%f等。它的作用是将输出的数据类型转换为指定的格式然后输出。
 扩展资料

C语言中格式字符的用法：

一、d格式符

    1、％d按整数的实际长度输出。

    2、％MD，米为指定的输出字段的宽度。如果数据位数小于米，则左端补以空格，若大于米，则按实际位数输出。（3），％LD，输出长整型数据。例：long a = 135790; 的printf（“％LD”，A）;如果用％d输出就会发生错误，因为整型数据的范围是-32768到32767。对于长型数据应当用％ld的格式输出，对长整型数据也可以指定字段宽度，如：％8LD。

二、O格式符，以八进制数形式输出整数。由于内存单元中的各位的值（0或1）按八进制形式输出，因此输出的数值不带符号，即将符号位也一起作为八进制的一部分输出。

三、X格式符，以十六进制数形式输出整数。同样不会出现负的十六进制数。同样可以用％LX输出长整型数，也可以指定输出字段宽度。

四、U格式符，用来输出无符号型数据，即无符号数，以十进制形式输出。一个有符号整数（int型）也可以用％U格式输出，反之，一个无符号型的数据也可以用％ d格式输出。按相互赋值的规则处理.Unsigned型数据也可以用％×格式输出。

五、C格式符，用来输出一个字符。一个字符型数据也可以用整数形式输出。

六、S格式符，用来输出一个字符串。

      1、％S，的的printf（“％S”，“HELLO”）;

      2、％MS输出字符串占米列，如字符串本身大于米，则突破米的限制，字符串全部输出，如果小于米，则左补空格（3），％ - 。毫秒如果字符串小于米，则在米范围内，字符串向左靠，右补空格。

      3、％m.ns，输出占米列，但只取字符串中左端Ñ个字符。这Ñ个字符输出在米列的右侧，左补空格。

      4、％ - m.ns，其中M，N含义同上，N个字符输出在米范围的左侧，右补空格如果N> M，则自动取值，即保证Ñ个字符正常输出。

参考资料来源：百度百科——格式字符
==========================================================================================================
&在c语言中的意思：
      一个是取地址；一个是运算符逻辑与
      &可以作为“按位与”或是“取地址”运算符 下面是作为两种用法的介绍： 1. 按位与运算 按位与运算符"&"是双目运算符。其功能是参与运算的两数各对应的二进位相与。只有对应的两个二进位均为1时，结果位才为1 ，否则为0。参与运算的数以补码方式出现。例如：9&5可写算式如下： 00001001 (9的二进制补码)&00000101 (5的二进制补码) 00000001 (1的二进制补码)可见9&5=1。 按位与运算通常用来对某些位清0或保留某些位。例如把a 的高八位清 0 ， 保留低八位， 可作 a&255 运算 ( 255 的二进制数为0000000011111111)。2.取地址&作为一元运算符，结果是右操作对象的地址。例如&x返回x的地址。地址本身是一个抽象的概念，用于表示对象在存储器中的逻辑位置
 =====
 C语言区分大小写：
 比如：int i:
      int I.
 =====
标识符的命名规则：标识符由字母、数字或者下划线组成，且第一个字符必须是字母或下划线。
  例如：ab.、_SCORE、x_123都是合法的；
        1A、#ab、if、printf都是非法的；
Ps.标识符区分大小写
=====
整形变量分类：
    基本型:类型说明符为int，在内存中占4个字节。
    短整型：类型说明符为short int或者short，在内存中站占两个字节。
    长整型：类型说明符为long int或者long，在内存中占4个字节。
    无符号型：类型说明符为unsigned（Ps.无符号型也可以与上述三种类型匹配使用）
  整型变量的定义：
    一般形式为：类型说明符+变量1[=值1],变量2[=值2],...;（Ps.中间（+号的位置）用空格链接。其中，中括号表示可有可无）
    Ex. int a,b；//a,b为整型变量
        long x,y;//x,y为长整型变量
===
实型变量分类：
  单精度实型：类型说明符为float，在内存中占4个字节。
  双精度实型：类型说明符为double，在内存中占8个字节。
实型变量的定义：
    一般形式为：类型说明符+变量1[=值1],变量2[=值2],...;（Ps.中间（+号的位置）用空格链接。其中，中括号表示可有可无）
  Ex. float a,b,c；//a,b,c为单精度实型变量
      double x,y,z;//x,y,双精度实型变量
      
 Ps.
    1.一个单精度实型变量只能保证7位有效数字，后面的数字是无意义的，并不准确地表示该数。
    2.一个双精度实型变量保证15-16位有效数字，尽量采用double类型。
===
 字符变量：
    定义：
      一般形式为：类型说明符+变量1[=值1],变量2[=值2],...;（Ps.中间（+号的位置）用空格链接。其中，中括号表示可有可无）
     Ex. 
        char a,b;//a,b为字符变量
语句编写：
  main()
  {
      int m;
      char c;
      m=‘A’；//字符赋值给整型变量
      c=66；//整数赋值给字符变量
      printf("%c,%d\n",m,m)
      printf("%c,%d\n",c,c)
    }
    运行结果：
    A,65
    B,66
    Ps.
      1.字符变量用来存放字符常量，只能存放一个字符。
      2.C语言中整型变量和字符变量通用。
=========================
数据类型转换：
    自动类型转换：
        字符类型的的级别：低————高
            char(字符型)、short（短整型）————int（整型）————unsigned（无符号型）————long（长整型）、float（单精度实型）————double（双精度实型）
             （        最低         ）                                                                                 （       最高      ） 
     转换规则：
          1.若参与运算量的类型不同，则先转换成同一类型，然后进行运算。
          2.转换按树蕨级别高的方向进行，以保证精度不降低。
            如int型和long型运算时，先把int量转成long型后再进行运算。
          3.所有的浮点运算都是以双精度进行的，即使仅含float单精度量运算的表达式，也要先转换成double型，再作运算。
          4.char型和short型参与运算时，必须先转换成int型。
          5.在赋值运算中，两边的数据类型不同时，赋值号右边量的类型将转换为左边量的类型。
    Ex.假设已制定i为整型变量，f为float型变量，d为double型变量，e为long型变量，表达式为：10+‘a’+i*f-d/e
       则表达式的运行次序？
  答：
    语句编写：
    main()
    {
       int i=2;
       float f=1.5;
       double d=4.0;
       long e=2;
       printf("i*f=%f,转化为float类型参与运算"，i*f);
       printf("d/e=%f,e转化为double类型参与运算"，d/e);
       printf("10+‘a’=%d,‘a’转化为int类型参与运算",10+‘a’);
       printf("10+‘a’+i*f=%f ,int转化为float类型",10+‘a’+i*f);
       printf("10+‘a’+i*f-d/e=%f,float转化为douuble类型"，10+‘a’+i*f-d/e);

    }
      运行次序：
      第一步运行：i*f
      第二步运行：d/e
      第三步运行：10+‘a’
      第四步运行：10+‘a’+i*f
      第五步运行：10+‘a’+i*f-d/e
      运行结果：
      i*f=3.000000，i转化为float类型参与运算
      d/e=2.000000,e转化为double类型参与运算
      10+‘a’=107，‘a’转化为int类型参与运算
      10+‘a’+i*f=110.000000,int转化为float类型
      10+‘a’+i*f-d/e=108.000000,float转化为double类型
      
一般形式：
    （类型说明符）（表达式）
  例如：
    （double)a   将变量a强制转换为double类型
    （int）(x+y) 将x+y的值强制转换为int类型
    （float)(5%3)将5%3的值强制转换为float类型
    （float）x/y 将x强制转换成float类型后，再参与运算
Ps.
  1.表达式应该用括号括起来。
  2.进行强制类型转换时，得到的是一个所需类型的中间变量，原来变量的类型并未发生改变。
============================================================
基本算数运算符的运算优先级依次为：（）（圆括号）——*（乘）、/（除以）、%（）取余 —— +（加）、-（）减   
                              Ps.同级按照从左往右运算。
自增自减运算符：
     作用：自增运算使单个变量的值增1，自减运算使单个变量的值减一。
   运算规则：
      前置运算：运算符放在变量之前：+ + a、- - a,先使变量的值增（或减）1，然后再以变化后的值参与其它运算，即先增减、后运算。
      后置运算：运算符放在变量之后：a + +、a - -，变量先参与其他运算，然后再使变量的值增（或减）1，即先运算、后增减。
   
    Ex.语句编写：                                                  运行结果：
        #include<stdio.h>

        int main()  
        {
            int i=3,j;
            j=i++;
            printf("i=%d,j=%d\n",i++,j);                           i=4,j=3
            j=++i;
            printf("i=%d,j=%d\n",++i,j);                           i=7,j=6
            j=--i;
            printf("i=%d,j=%d\n",i--,j);                           i=6,j=6
            j=i--;
            printf("i=%d,j=%d\n",--i,j);                           i=3,j=5

        }
    注意事项：
      1.++和--只能用于变量，而不能用于常量或表达式。
        如:（i+j）++或5--是不合法的。
      2.++和--的结合方向是“自右至左”。
        如：i=4,则-i--相当于-（i--）结果为-4，而i的值为3.
      3.运算符的组合原则使自左至右。
        如：a+++b等价于（a++）+b，而不是a+(++b)。
      4.++和--常用于循环语句中，使循环控制变量加（或减）1；指针变量中，使指针上移（或下移）一个位置。



算术表达式：
    定义:算数表达式使用算数运算符和括号将运算对象（也称操作数）连接起来的、符合C语法规则的式子，其中运算对象可以是常量、变量、函数等。
    例如：a*b/c-1.5+‘a’ 是一个合法的算数表达式。
    注意：
      1.与数学表达式的书写形式的区别：
          ①C语言算术表达式的称号（*）不能省略。例如：b^2-4ac,应该携程b*b-4*a*a.
          ②C语言表达式中只能出现字符集允许的字符。例如：Πr^2应该写成PI*r*r。(其中PI需要宏定义)
          ③C语言算数表达式不允许有分子分母的形式。例如：（a+b）/(c+d)不等于a+b/c+d。
          ④C语言算术表达式只使用圆括号改变运算的优先顺序（不能用[]、{}）
      2.各运算符的“优先级”和“结合性”：
          ①再表达式求值时，按运算符的优先级高低次序执行，如:a-b*c等价于a-(b*c)。
            如果优先级别相同，则按规定的“结合方向”，如表达式为：a-b+c结合性为“自左至右”，所以等价于（a-b）+c。
          ②C对于复杂表达式为了清晰起见可以加圆括号“（）”，强制规定计算顺序。

==================================
符合赋值运算符：在赋值符“=”之前加上其它二目运算符可构成复合赋值符。
    例如:+=、-=、*=、/=、%=、<<=（左移 等于号）、>>=（右移 等于号）、&=（与运算 等于号）、^=（亦或 等于号）、|=（或 等于号）。
  一般形式：变量 复合赋值符=表达式  等价于  变量=变量 运算符 表达式
例如：
  a+=5   等价于  a=a+5
  x*=y+7 等价于  x=x*(y+7)
  r%=p   等价于  r=r%p

赋值表达式：
    定义:由赋值运算符组成的表达式称为赋值表达式。
    一般形式：变量=表达式；
    
    例如：
     x=5                  赋值表达式x=5的值为5，x的值也为5.
     x=7%2+(y=5)          赋值表达式的值为6，x的值也为6，y的值为5。
     a=(b=6)或a=b=6       赋值表达式的值为6,a\b的值均为6.
     a+=a*(a=5)          相当于a=5+5*5，赋值表达式的值为30，a的值最终也是30.
     
     功能：赋值表达式的功能使计算表达式的值再赋予左边的变量。

  注意 说明：
      1.赋值表达式加上一个分号则可构成赋值语句，即：变量=表达式；
      2.赋值语句不是表达式，表达式可以用在其它语句或表达式中，而语句只能作为一个单独的语句使用；
      3.C语言规定：可以再定义变量的同时给变量赋值，也叫给变量初始化。例如： int x=5；
      4.赋值运算时，当赋值运算符两边数据类型不同时，系统自动进行类型转换，转换原则是：先将赋值号右边表达式类型转换为左边变量的类型，然后赋值。
============================================================================================
逗号运算符：
    C语言提供一种逗号“,”运算符，逗号预算夫又称顺序求值运算符。
逗号表达式：表达式1，表达式2，，……，表达式n。
  注意事项：
    1.逗号表达式的求解过程为：先求解表达式1，再求解表达式2，依次类推，最后求表达式n。结合性自左向右。
    2.表达式n的值就是整个逗号表达式的值。
    3.逗号运算符的优先级是所有运算符中最低的，

======================================================================
%c：表示字符型的输出值。
字符a（小写）对应的ASCII值为97
....b.....................98
....c.....................99
......
....z.....................122
字符A（大写）对应的ASCII值为65（与小写 相差32个）
....B.....................66
....C.....................67
......
....Z.....................90
==============================================
第三章
========================
========================
========================
顺序结构：先A，后B。
/*顺序结构*/


#include <stdio.h>
main()
{
    int x,y;
    scanf("%d",&x);
    y=abs(x);
    printf("y=%d\n",y);
}

==============================
|x|=abs(x)=x的绝对值
====================================
拾天 2020/12/16 16:26:18
一个等号与两个等号有什么区别嘛？

水木 2020/12/16 21:56:56
一个是赋值，两个是关系运算符

==================================
/*选择结构*/
#include <stdio.h>
main()
{
    int n;
    scanf("%d",&n);
    if(n%2==0)
        printf("\n%d是一个偶数,这只能说明邵子洋有点儿聪明。\n",n);
    else
        printf("\n%d是一个奇数，这只能说明邵子洋不是大聪明。\n",n);
}

=======================================
循环结构：
    执行过程：
        先判断条件，如果条件成立，执行A，再循环判断条件，否则，跳出循环，

/*循环结构*/
#include <stdio.h>
main()
{
    int i;
    for(i=1;i<=99999;i++)
        printf("我爱你第%d万年\n",i);
}
========================================
顺序结构设计
例.将a与b的值进行交换
答：
main()
{
    int a,b,t;//定义三个变量a,b,t
    a=3,b=2;//2存储到a中，3存储到b中
    t=a;//将a的值存储到t中
    a=b;//将b的值存储到a中
    b=t;//将t的值存储到a中
    printf("%d %d",a,b);//输出a和b的值
}
=========================================
格式化输入函数：
  scanf函数格式及功能：scanf(格式控制字符串，变量地址列表)
  函数功能：通过标准输入设备（键盘、写字板等），按照样式控制字符串中的格式要求位变量地址列表中的变量输入数据。

Ps。
  %d____输入一个十进制整数
  %f____输入一个单精度实数
  %lf____输入一个双精度实数
  %c____输入一个字符
  %s____输入一个字符串
  %*____表示输入项只是读入，但不赋给相应变量
  %e或%E____表示按指数格式输出一个实数
变量地址列表串：
    变量地址列表由输入项组成，两个输入项之间用逗号分隔，输入项一般由地址符“&”和变量名组成，即&变量名。
注意事项：
    ①格式控制字符串中多个格式转换说明符之间有没有逗号区别。
    例：
          编写                          输入
    scanf("%d %d",&a,&b)               4 5
    scanf("%d，%d",&a,&b)              4,5
   ②格式转换说明符个数和类型必须与变量地址列表一一对应。
   ③*（抑制字符）：表示本输入项只是读入，但不赋给相应变量。
       例：
          main()                                          结果
          {
              int a,b;
              scanf("%d %*d %d",&a,&b);               输入：123[空、格]456[空、格]789
              printf("a=%d,b=%d\n",a,b);              输出：123[空、格]789
          }



printf函数格式及功能：
        函数格式：printf(格式控制字符串，输出列表)
        函数功能：将输出列表中的各个表达式的值按照格式控制字符串中对应的格式输出到标准输出设备（显示屏）。
Ps.①输出列表由输出项组成，两个输出项之间用 逗号分隔，输出项可以是一般的表达式，也可以是简单变量，即：变量名或者表达式。
   ②修饰符m(正整数)：指定输出项所占的宽度，当指定宽度小于实际宽度时按实际款段输出；当指定宽度大于实际宽度时再前面用空格补足，
      例：语句编译：
          #include <stdio.h>
          main()
          {
              int a=123,b=12345;
              printf("a=%4d,b=%4d",a,b);
          }
          运行结果：
            _123,12345
    ④修饰符.n（正整数）：指定输出的实型数据的小数位数（四舍五入），系统默认小数位数为6.
      例：语句编写：
        main()
         {
              float x=123.44;
              printf("%.1f,%.2f,%.6f\b",x,x,x);
         }
          运行结果：123.4，123.44，123.440002（最后一个2不是精确位数，所以可以忽略不计）


     ⑤修饰符0（数字）：指定数字前的空格用0填补。
      例：语句编写
          main()
          {
              int a=123;
              printf("%04d\n",a);
          }
           运行结果：0123
     ⑥修饰符-：指定输出项的对齐方式，表示左对齐。
        语句编写
          main()
          {
              int a=123;
              printf("%-4d\n",a);
          }
           运行结果：123_(_表示空格)
     
====================================================================
getchar函数格式功能；
      函数格式；getchar();
      函数功能：从标准输入设备输入一个字符。
      注意事项：
        （1）该函数没有参数，函数的返回值是从输入设备得到的字符。
        （2）从键盘上输入数据通过回车键结束，送入缓冲区，该函数从缓冲区读入一个字符赋给字符变量。
        （3）该函数也可以接收回车符。
     语句编写：
     main()
     {
        char ch1,ch2;
        ch1=getchar();
        getchar();    //吸收空格符
        ch2=getchar();
        printf("%c,%c\n",ch1,ch2);
     }
     运行结果：o,k
     
     利用getchar函数，实现输入两个字符。
     （1）每输入一个字符按回车的方式输入。
     （1）连续输入两个字符后按回车的方式输入。
      语句编写：
          #include <stdio.h>
          main()
          {
              char ch1,ch2;
              ch1=getchar();
              ch2=getchar();
              printf("ch1=%c,ch2=%c",ch1,ch2);
          }
=============================================================
putchar函数格式功能；
    函数格式：putchar(ch);
             注：ch可以是一个字符型常量、变量或者是一个不大于255的整型常量或者是变量。也可以是一个转义字符。
    函数功能：向标准输出设备输出一个字符。
    例1：利用putchar函数，实现输出字符型变量。
    答：#include <stdio.h>
        main()
        {
            char ch='Y';
            putchar(ch);
        }
    例2：利用putchar函数，实现输出字符型或者整型常量。
    答：#include <stdio.h>
        main()
        {
            putchar('I');
            putchar(70);
        }
    例3：利用putchar函数，实现输出转义字符。
    答：#include <stdio.h>
        main()
        {
            putchar('I');
            putchar(70);
            putchar('\n');
            putchar('\007');
        }



